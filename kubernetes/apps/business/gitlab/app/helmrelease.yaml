---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: gitlab
  namespace: business
spec:
  releaseName: gitlab
  interval: 5m
  chart:
    spec:
      chart: gitlab
      version: 6.9.3
      sourceRef:
        kind: HelmRepository
        name: gitlab-charts
        namespace: flux-system
      interval: 5m
  values:
    global:
      edition: ce
      gitlabVersion: 15.2.2
      ingress:
        main:
          enabled: true
          ingressClassName: "nginx"
          annotations:
            external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
            external-dns/is-public: "true"
            hajimari.io/enable: "true"
            hajimari.io/group: "business"
          hosts:
            - host: &host "gitlab.${SECRET_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
      # minio:
      #   enabled: false
      kas:
        enabled: false
      pages:
        enabled: true
      email:
        display_name: GitLab
        from: gitlab@${SECRET_DOMAIN}
        reply_to: noreply@${SECRET_DOMAIN}
      # smtp:
      #   enabled: true
      #   address: ${SECRET_SMTP_HOST}
      #   port: 587
      #   user_name: ${SECRET_TVO_EMAIL}
      #   domain: ${SECRET_DOMAIN}
      #   starttls_auto: true
      #   password:
      #     secret: gitlab
      #     key: smtp_password
      psql:
        host: cnpg-gitlab-rw
        database: gitlab
        username: ${SECRET_GITLAB_PGUSER}
        password:
          useSecret: true
          secret: gitlab-cnpg-secret
          key: password
      hosts:
        domain: ${SECRET_DOMAIN}
        # https: true
        # gitlab:
        #   name: gitlab.${SECRET_DOMAIN}
        minio:
          name: minio-gitlab.${SECRET_DOMAIN}
    postgresql:
      install: false
    gitlab:
      gitaly:
        resources:
          requests:
            cpu: 80m
            memory: 340M
          limits:
            cpu: 1800m
      webservice:
        minReplicas: 1
        maxReplicas: 1
      sidekiq:
        minReplicas: 1
        maxReplicas: 1
      gitlab-shell:
        minReplicas: 1
        maxReplicas: 1
    certmanager:
      install: false
    nginx-ingress:
      enabled: false
    prometheus:
      install: false
    grafana:
      enabled: false
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cnpg-gitlab
  namespace: business
spec:
  instances: 1

  # Example of rolling update strategy:
  # - unsupervised: automated update of the primary once all
  #                 replicas have been upgraded (default)
  # - supervised: requires manual supervision to perform
  #               the switchover of the primary
  primaryUpdateStrategy: unsupervised

  # superuserSecret:
  #   name: superuser-secret

  bootstrap:
    initdb:
      database: gitlab
      owner: ${SECRET_GITLAB_PGUSER}
      secret:
        name: gitlab-cnpg-secret

  storage:
    size: 20Gi
    storageClass: longhorn

  # backup: # no matches for kind "Backup" in version "postgresql.cnpg.io/v1"
  #   retentionPolicy: "30d"
  #   barmanObjectStore:
  #     wal:
  #       compression: bzip2
  #     destinationPath: s3://cnpg/
  #     endpointURL: http://minio.database.svc.cluster.local:9000
  #     s3Credentials:
  #       accessKeyId:
  #         name: minio-creds
  #         key: ACCESS_KEY_ID
  #       secretAccessKey:
  #         name: minio-creds
  #         key: ACCESS_SECRET_KEY

---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: minio-creds
  namespace: business
stringData:
  ACCESS_KEY_ID: ${SECRET_CLUSTER_MINIO_ACCESS_KEY}
  ACCESS_SECRET_KEY: ${SECRET_CLUSTER_MINIO_SECRET_KEY}

---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: gitlab-cnpg-secret
  namespace: business
stringData:
  username: ${SECRET_GITLAB_PGUSER}
  password: ${SECRET_GITLAB_PGPASSWORD}

---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: daily-backup-gitlab
  namespace: business
spec:
  schedule: "@daily"
  cluster:
    name: cnpg-gitlab

---
# apiVersion: postgresql.cnpg.io/v1
# kind: Backup
# metadata:
#   name: backup-gitlab
#   namespace: business
# spec:
#   cluster:
#     name: cnpg-gitlab
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-config
  namespace: business
  labels:
    triliovault.trilio.io/backup: "true"
    kasten.io/backup-volume: "enabled"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi
---
kind: Secret
apiVersion: v1
type: Opaque
metadata:
  name: gitlab
  namespace: business
stringData:
  smtp_password: "${SECRET_GITLAB_EMAIL_PASSWORD}"
