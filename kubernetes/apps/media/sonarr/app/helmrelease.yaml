---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  install:
    disableWait: true
    remediation:
      retries: 100
  upgrade:
    remediation:
      retries: 100
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 15m
  values:
    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.0.412@sha256:ac7a25e6a4df73cece0921fa69b161ebfef43ab8b18ee21077a2b5c6d07b83cb

    env:
      TZ: "${TIMEZONE}"
      PUSHOVER_APP_URL: &host "sonarr.${SECRET_DOMAIN}"
      PUSHOVER_PRIORITY: "-1"
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 8989
      SONARR__APPLICATION_URL: "https://sonarr.${SECRET_DOMAIN}"
      SONARR__LOG_LEVEL: info

    # envFrom:
    #   - secretRef:
    #       name: sonarr-secret

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        primary: true
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/group: "media"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
        hosts:
          - host: sonarr.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - sonarr.${SECRET_DOMAIN}

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 65539

    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-0
      media:
        enabled: true
        existingClaim: media-nfs
        mountPath: /media
      media-canfail:
        enabled: true
        existingClaim: media-nfs-canfail
        mountPath: /media-canfail
      backup:
        enabled: true
        existingClaim: media-nfs
        mountPath: /media

    resources:
      requests:
        memory: 250Mi
        cpu: 50m
      limits:
        memory: 2Gi

    metrics:
      enabled: true
      serviceMonitor:
        interval: 3m
        scrapeTimeout: 1m
      prometheusRule:
        enabled: true
      exporter:
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v1.2.4
        env:
          port: 9794
          additionalMetrics: true
          unknownQueueItems: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config-0
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 15Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-cephfs
  namespace: media
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 15Gi
  storageClassName: longhorn

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-nfs-canfail
  namespace: media
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-nfs
  namespace: media
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 55Gi
